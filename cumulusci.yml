# This portion of the cumulusci.yml should be generated using cci project init command.

minimum_cumulusci_version: "3.12.2"
project:
  name: cci-tasks
  package:
    name: cci-tasks
    api_version: "48.0"
  source_format: sfdx

sources:
  npsp:
    github: https://github.com/SalesforceFoundation/NPSP
    release: latest

# Useful tasks and flows start here. All tasks and flows should have a group. The group is used to categorize tasks and flows when executing the commands:

# cci task list
# cci flow list

tasks:
  # Package Development
  resolve_dependencies:
    description: Transfers cci dependencies to sfdx-project.json
    class_path: tasks.package_development.ResolveDependencies
    group: Package Development

  set_default:
    description: Changes the default directory. Pass in directory with -o
    class_path: tasks.package_development.SetDefault
    group: Package Development

  # NPSP
  init_rollup_settings:
    description: Initialize rollup settings, since the custom_settings_value_wait task requires the value to exist. Needed when using Enhanced Recurring Donations.
    class_path: cumulusci.tasks.apex.anon.AnonymousApexTask
    group: NPSP
    options:
      apex: >
        npsp__Customizable_Rollup_Settings__c crlpSettings = npsp__Customizable_Rollup_Settings__c.getOrgDefaults();
        upsert crlpSettings;

  npsp_custom_config:
    description: Post install metadata for NPSP
    class_path: cumulusci.tasks.salesforce.Deploy
    group: NPSP
    options:
      path: unpackaged/npsp/custom_config

  generate_test_data:
    description: Creates a new set of test data; overwrites existing data file.
    class_path: tasks.data.CreateTestData
    group: Test Data
    options:
      sql_path: datasets/dev_org/test_data.sql

  # Test Data
  test_data_dev_org:
    description: Loads a test data set for most NPSP objects based on 100 Contacts that should fit into a scratch org or DE org.
    class_path: cumulusci.tasks.bulkdata.LoadData
    group: Test Data
    options:
      sql_path: datasets/dev_org/test_data.sql
      mapping: datasets/mapping.yml
      ignore_row_errors: true

  test_data_delete:
    description: Deletes all data in the objects specified in the objects option.
    class_path: cumulusci.tasks.bulkdata.DeleteData
    group: Test Data
    options:
      objects:
        - npsp__Allocation__c
        - OpportunityContactRole
        - Opportunity
        - npe03__Recurring_Donation__c
        - Case
        - npsp__General_Accounting_Unit__c
        - Campaign
        - CampaignMember
        - npsp__Address__c
        - Contact
        - Account

  # Common Packages
  dx_install_historical_transactions_authorize:
    description: Install Historical Transactions unmanaged package from CANDTECH Org
    class_path: cumulusci.tasks.sfdx.SFDXOrgTask
    group: Common Packages
    options:
      command: force:package:install
      extra: -p 04tj0000001acCZ --noprompt --wait 300

  # Custom Development 
  #   Almost every project should include all of these.
  tracking_clear:
    description: Resets the tracking status.
    class_path: cumulusci.tasks.sfdx.SFDXOrgTask
    group: Custom Development
    options:
      command: "force:source:tracking:clear"
      extra: "-p"

  tracking_reset:
    description: Resets the tracking status.
    class_path: cumulusci.tasks.sfdx.SFDXOrgTask
    group: Custom Development
    options:
      command: "force:source:tracking:reset"
      extra: "-p"

  pull_custom_settings:
    description: Pulls custom settings from org into orgCustomSettings.yml
    class_path: tasks.pullCustomSettings.PullSettings
    group: Custom Development

  clean_profile_permissions:
    description: Removes unwanted profile permissions
    class_path: tasks.cleanProfilePermissions.CleanProfile
    group: Custom Development

  comment_forceignore:
    description: Comments or uncomments the line "**profile" in .forceignore
    class_path: tasks.commentForceignore.CommentProfile
    group: Custom Development

  # Group Workarounds
  #   The expectation is that these will not be needed forever, so if you use one of these, make sure it is still necessary.
  custom_snowfakery_from_yaml:
    description: Custom Snowfakery From Yaml. This allows for advanced relationships (reference by ID) with Snowfakery.
    class_path: tasks.custom_snowfakery_from_yaml.CustomSnowfakeryFromYaml
    group: Workarounds

flows:
  # Test Data
  import_test_data:
    group: Test Data
    steps:
      1:
        task: test_data_delete
      2:
        task: generate_test_data
      3:
        task: test_data_dev_org

  # Custom Development
  tracking_reset:
    group: Custom Development
    steps:
      1:
        task: tracking_clear
      2:
        task: tracking_reset
  push_custom_settings:
    group: Custom Development
    steps:
      1:
        task: load_custom_settings
        options:
          settings_path: orgCustomSettings.yml
