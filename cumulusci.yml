minimum_cumulusci_version: "3.12.2"
project:
  name: cci-tasks
  package:
    name: cci-tasks
    api_version: "48.0"
  source_format: sfdx

sources:
  npsp:
    github: https://github.com/SalesforceFoundation/NPSP
    tag: rel/3.178

tasks:
  resolve_dependencies:
    description: Transfers cci dependencies to sfdx-project.json
    class_path: tasks.ResolveDependencies

  set_default:
    description: Changes the default directory. Pass in directory with -o
    class_path: tasks.SetDefault

flows:
  #Copied from https://github.com/SalesforceFoundation/NPSP/blob/master/cumulusci.yml#L841
  #THIS IS A WORKAROUND
  #Injected step 1.5
  #Added npsp: to all tasks except wait. This ensures the namespaces are correct.
  enable_rd2:
    description: "Fully configures and enables a Scratch org with Enhanced Recurring Donations (unmanaged code only)"
    group: NPSP
    steps:
      1:
        task: npsp:enable_crlp
        # Enable customizable rollups after enabling RD2
      1.5:
        task: util_sleep
        options:
          seconds: 180
      2:
        task: npsp:custom_settings_value_wait
        # Wait for CRLP to be fully enabled before continuing with data migration
        options:
          object: "%%%NAMESPACE%%%Customizable_Rollup_Settings__c"
          field: "%%%NAMESPACE%%%Customizable_Rollups_Enabled__c"
          value: true
      3:
        task: npsp:execute_anon
        # Enables RD2 in Custom Settings.
        options:
          apex: >
            Map<String, Object> params = new Map<String, Object>{ 'ScheduleJobs' => true };
            String shouldScheduleJobs = '%%%PARAM_1%%%';
            if (!String.isEmpty(shouldScheduleJobs)) {
                params.put('ScheduleJobs', Boolean.valueOf(shouldScheduleJobs));
            }
            String ns = ('%%%NAMESPACE%%%').replace('__','');
            Type t = Type.forName(ns, 'Callable_Api');
            Callable apiClass = (Callable)t.newInstance();
            apiClass.call('Settings.EnableEnhancedRecurringDonations', params);
      4:
        task: npsp:deploy_rd2_config
        # Deploys the unpackaged configuration required for RD2
      5:
        task:
          npsp:execute_anon
          # Execute the data migration job in case there is any RD test data in the org
        options:
          apex: >
            Map<String, Object> params = new Map<String, Object>();
            String ns = ('%%%NAMESPACE%%%').replace('__','');
            Type t = Type.forName(ns, 'Callable_Api');
            Callable apiClass = (Callable)t.newInstance();
            apiClass.call('RD2.ExecuteDataMigration', params);
      6:
        task: npsp:batch_apex_wait
        # Wait until after the data migration job has completed
        options:
          class_name: RD2_DataMigration_BATCH
      7:
        task: npsp:execute_anon
        # Update enhanced Recurring Donation enablement page state
        options:
          apex: >
            npe03__Recurring_Donations_Settings__c rdSettings = npe03__Recurring_Donations_Settings__c.getOrgDefaults();
            rdSettings.%%%NAMESPACE%%%RecurringDonations2EnablementState__c = '{"isReady":true,"isMigrationEnabled":true,"isMetaLaunched":true,"isMetaConfirmed":true,"isEnabled":true,"isDryRun2":false,"isConfirmed":true,"dryRunLimit":7}';
            upsert rdSettings;

  #Copied from https://github.com/SalesforceFoundation/NPSP/blob/master/cumulusci.yml#L841
  #THIS IS A WORKAROUND
  #Refers to local enable_rd2
  #Added npsp: namespace to all task options below
  enable_rd2_managed:
    description: "Fully configures and enables a Scratch org with Enhanced Recurring Donations (managed package only)"
    group: NPSP
    steps:
      1:
        flow: enable_rd2
        options:
          npsp:enable_crlp:
            managed: true
            param1: false
          npsp:custom_settings_value_wait:
            managed: true
          npsp:execute_anon:
            managed: true
            unmanaged: false
          npsp:deploy_rd2_config:
            managed: true
            unmanaged: false
